{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","home","role","onClick","toggleMode","htmlFor","TextForm","pros","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","newtext","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","captalize","msg","About","App","setMode","setAlert","message","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8ff42bf4.chunk.js","sourcesContent":["import React from 'react'\r\n// import {Link} from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li> */}\r\n       \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick = {props.toggleMode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n// Navbar.PropTypes = {\r\n//     title : PropTypes.string,\r\n//     about : PropTypes.string \r\n// }\r\n","import React,{ useState }  from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(pros) {\r\n    const handleUPclik = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        pros.showAlert(\" Converted to upperCase\",\"success\");\r\n    }\r\n    const handlelowerclik = ()=>{\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        pros.showAlert(\" Converted to loverCase\",\"success\");\r\n\r\n    }\r\n    const handleCopy = ()=>{\r\n        let  text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        pros.showAlert(\" Coppy to clipBoard\",\"success\");\r\n    }\r\n    const handleExtraSpace = ()=>{\r\n        let  newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        pros.showAlert(\" Remove extra spaces\",\"success\");\r\n    }\r\n    \r\n    const [text,setText] = useState(\"Enter text here\");\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: pros.mode==='dark'?'white':'black'}}>\r\n            <h1 >{pros.heading }</h1>\r\n      \r\n<div className=\"mb-3\">\r\n  <label htmlFor=\"myBox\" className=\"form-label\"></label>\r\n  <textarea className=\"form-control\" id=\"myBox\" value={text } onChange = {handleOnChange} style={{backgroundColor: pros.mode==='dark'?'gray':'white',color: pros.mode==='dark'?'white':'black'}} rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick = {handleUPclik}>Convert to upperCase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick = {handlelowerclik}>Convert to lowerCase</button>\r\n\r\n<button className=\"btn btn-primary\" onClick = {handleCopy}>Coppy</button>\r\n<button className=\"btn btn-primary mx-2\" onClick = {handleExtraSpace}> Remove extra space </button>\r\n            \r\n        </div>\r\n        <div className=\"conatiner my-3\" style={{color: pros.mode==='dark'?'white':'black'}} >\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length}</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above preview it here\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n        \r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong> {captalize(props.alert.type)} </strong>:{props.alert.msg}\r\n    \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\n\n// import {\n//   BrowserRouter as Router, \n//   Switch, //Note Switch change by Routes \n//   Route\n\n// } from \"react-router-dom\";\nimport React, { useState } from 'react';\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //weather dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message , type) =>{\n    setAlert({\n      msg :message,\n      type :type\n    }\n    )\n    setTimeout(() => {\n      setAlert(null)\n      \n    }, 1500);\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - light Mode';\n      // setInterval(()=>{\n      //   document.title = 'interval set now';\n      // },2000);\n      // setInterval(()=>{\n      //   document.title = 'intervl yes now';\n      // },1500);\n    }\n  }\n  return (\n  \n   <>\n   {/* <Router> */}\n  \n<Navbar title = \"TextUtils\" about = \"About us\" home =\"Home\" mode = {mode} toggleMode = {toggleMode}/>\n<Alert alert = {alert}/>\n<div className=\"container my-3\">\n{/* <Switch> */}\n  {/* exact /users --> Component 1  */}\n  {/* /users home --> Component 2 */}\n          {/* <Route exact path=\"/about\"> */}\n            <About />\n          {/* </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading = \"Enter the text to analyze\" mode = {mode}/>\n            \n          {/* </Route> */}\n        {/* </Switch> */}\n\n<About/>\n</div>\n{/* </Router> */}\n</>\n   \n    );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}